Exercises
Use the cities collections.

1) Write a Query to return all the documents whose cities population is less than 30 not equal to zero, then uses the limit clause to limit the number of documents being returned to just 2.

db.cities.find( { population: { $lt: 30, $ne: 0 } } ).limit(2)
{ _id: ObjectId("637f424a1287e530317a8a1a"),
  name: 'Tanggul',
  country: 'ID',
  timezone: 'Asia/Jakarta',
  population: 3,
  location: { latitude: -8.1645, longitude: 113.4525 } }
{ _id: ObjectId("637f424c1287e530317ac7b3"),
  name: 'Ereencav',
  country: 'MN',
  timezone: 'Asia/Choibalsan',
  population: 23,
  location: { longitude: 49.8807, latitude: 115.72526 } }
  
2) Write a Query to count the number of the documents whose timezone is
“Asia/Jakarta”.

db.cities.find( { timezone: "Asia/Jakarta" }).count()
1430

3) Write a Query to return all the documents whose country is “PK” and country timezone is “Asia/Karachi” and return the documents based on the descending order of population.

db.cities.find( { country: "PK", timezone: "Asia/Karachi"} ).sort({population:-1})
{ _id: ObjectId("637f424d1287e530317aeb28"),
  name: 'Karachi',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 11624219,
  location: { longitude: 24.9056, latitude: 67.0822 } }
{ _id: ObjectId("637f424d1287e530317aeafc"),
  name: 'Lahore',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 6310888,
  location: { longitude: 31.54972, latitude: 74.34361 } }
{ _id: ObjectId("637f424d1287e530317aeb79"),
  name: 'Faisalābād',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 2506595,
  location: { longitude: 31.41667, latitude: 73.08333 } }
{ _id: ObjectId("637f424d1287e530317aea9b"),
  name: 'Rāwalpindi',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 1743101,
  location: { longitude: 33.6007, latitude: 73.0679 } }
{ _id: ObjectId("637f424d1287e530317aead2"),
  name: 'Multān',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 1437230,
  location: { longitude: 30.19556, latitude: 71.47528 } }
{ _id: ObjectId("637f424d1287e530317aeb53"),
  name: 'Hyderābād',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 1386330,
  location: { longitude: 25.3823, latitude: 68.3699 } }
{ _id: ObjectId("637f424d1287e530317aeb65"),
  name: 'Gujrānwāla',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 1384471,
  location: { longitude: 32.16167, latitude: 74.18831 } }
{ _id: ObjectId("637f424d1287e530317aeab2"),
  name: 'Peshāwar',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 1218773,
  location: { longitude: 34.00837, latitude: 71.58018 } }
{ _id: ObjectId("637f424d1287e530317aeaa5"),
  name: 'Quetta',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 733675,
  location: { longitude: 30.18722, latitude: 67.0125 } }
{ _id: ObjectId("637f424d1287e530317aeb0a"),
  name: 'Kotli',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 640000,
  location: { longitude: 33.51667, latitude: 73.91667 } }
{ _id: ObjectId("637f424d1287e530317aeb52"),
  name: 'Islāmābād',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 601600,
  location: { longitude: 33.72148, latitude: 73.04329 } }
{ _id: ObjectId("637f424d1287e530317aebc4"),
  name: 'Bahāwalpur',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 552607,
  location: { longitude: 29.4, latitude: 71.68333 } }
{ _id: ObjectId("637f424d1287e530317aea88"),
  name: 'Sargodha',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 542603,
  location: { longitude: 32.08361, latitude: 72.67111 } }
{ _id: ObjectId("637f424d1287e530317aea79"),
  name: 'Siālkot',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 477396,
  location: { longitude: 32.5101, latitude: 74.54313 } }
{ _id: ObjectId("637f424d1287e530317aea6f"),
  name: 'Sukkur',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 417767,
  location: { longitude: 27.7, latitude: 68.86667 } }
{ _id: ObjectId("637f424d1287e530317aeaf6"),
  name: 'Lārkāna',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 364033,
  location: { longitude: 27.55, latitude: 68.21667 } }
{ _id: ObjectId("637f424d1287e530317aea7e"),
  name: 'Sheikhupura',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 361303,
  location: { longitude: 31.71306, latitude: 73.97833 } }
{ _id: ObjectId("637f424d1287e530317aebb2"),
  name: 'Bhimbar',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 342900,
  location: { longitude: 32.97568, latitude: 74.07926 } }
{ _id: ObjectId("637f424d1287e530317aeb44"),
  name: 'Jhang Sadr',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 341210,
  location: { longitude: 31.27396, latitude: 72.31604 } }
{ _id: ObjectId("637f424d1287e530317aeb64"),
  name: 'Gujrāt',
  country: 'PK',
  timezone: 'Asia/Karachi',
  population: 301506,
  location: { longitude: 32.57276, latitude: 74.08959 } }
  

4) Write a query to get all the Indexes of cities collection and then add the index on population field and then drop the index on population field.

db.cities.getIndexes()
[ { v: 2, key: { _id: 1 }, name: '_id_' } ]
____________________________________________________________
db.cities.createIndex({population:1})
'population_1'
db.cities.getIndexes()
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  { v: 2, key: { population: 1 }, name: 'population_1' }
]
____________________________________________________________
db.cities.dropIndex({population:1})
{ nIndexesWas: 2, ok: 1 }
db.cities.getIndexes()
[ { v: 2, key: { _id: 1 }, name: '_id_' } ]



5) Use MongoDB compass filter tab to write queries for finding:

i. All those cities whose time zone is Europe/Andorra.

{timezone:"Europe/Andorra"}

ii. All those cities whose population is greater than 12955000 and country is AR.

{country:"AR", population:{$gt: 12955000}}

iii. A city whose longitude equals to 1.6. Your query should return location and
population fields only. (hint: use project)

{"location.longitude":1.6}
{location:1, population:1}

